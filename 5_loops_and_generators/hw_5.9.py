from itertools import count
import numbers
from unittest import result
import pytest

# TODO: 5.9 Вложенные циклы и вложенные генераторы списков

# Подвиг 1. На вход программе подается натуральное число N. Прочитайте его и с помощью list comprehension сформируйте двумерный список размером N x N, состоящий из нулей, а по главной диагонали - единицы. (Главная диагональ - это элементы, идущие по диагонали от верхнего левого угла матрицы до ее нижнего правого угла). Полученный двумерный список отобразите в виде таблицы чисел, как показано в примере ниже.
# Sample Input:
# 4
# Sample Output:
# 1 0 0 0
# 0 1 0 0
# 0 0 1 0
# 0 0 0 1

# n = int(input())
# matrix = [[1 if i ==j else 0 for j in range(n)] for i in range(n)]
# for row in matrix:
#     print(*row)


# Подвиг 2. На вход программе подается двумерная таблица из целых чисел (см. пример ниже). В программе уже реализовано его чтение и сохранение в двумерном списке:
# s = sys.stdin.readlines()
# lst_in = [list(map(int, x.strip().split())) for x in s]                  
# С помощью list comprehension необходимо преобразовать двумерный список lst_in в одномерный так, чтобы значения элементов шли в обратном порядке. Результат отобразить в виде строки из чисел, записанных через пробел.
# Sample Input:
# 1 2 3 4
# 5 6 7 8
# 9 8 7 6
# 5 4 3 2
# Sample Output:
# 2 3 4 5 6 7 8 9 8 7 6 5 4 3 2 1

# import sys
# # s = sys.stdin.readlines()
# s = ['1 2 3 4\n', '5 6 7 8\n', '9 8 7 6\n', '5 4 3 2\n']
# lst_in = [list(map(int, x.strip().split())) for x in s]
# # lst_out = [el for row in lst_in for el in row][::-1]
# lst_out = [el for row in lst_in for el in row]
# lst_out.reverse()
# print(*lst_out)


# Подвиг 3. На вход программе подаются целые числа, записанные через пробел. Необходимо их прочитать и с помощью list comprehension сформировать двумерный список lst размером N x N (квадратную таблицу чисел). Гарантируется, что из набора введенных чисел можно сформировать квадратную матрицу (таблицу). Полученный двумерный список отобразить командой:
# print(lst)
# Sample Input:
# 1 2 3 4 5 6 7 8 9
# Sample Output:
# [[1, 2, 3], [4, 5, 6], [7, 8, 9]]

# numbers = list(map(int, input().split()))
# n = int(len(numbers) ** 0.5)
# lst = [[numbers[i * n + j] for j in range(n)] for i in range(n)]
# print(lst)


# Подвиг 4. Объявите в программе следующий список из строк:
# t = ["– Скажи-ка, дядя, ведь не даром",
#     "Я Python выучил с каналом",
#     "Балакирев что раздавал?",
#     "Ведь были ж заданья боевые,",
#     "Да, говорят, еще какие!",
#     "Недаром помнит вся Россия",
#     "Как мы рубили их тогда!"
#     ]
                 
# Необходимо преобразовать его в двумерный (вложенный) список lst, где каждая строка представляется списком из слов (слова разделяются пробелом, запятые и прочие непробельные символы оставлять), но сохранять слова только длиной более трех символов. Решить данную задачу следует с использованием list comprehension. Результат отобразить с помощью команды:
# print(lst)                
# То есть, на выходе список должен быть:
# [['Скажи-ка,', 'дядя,', 'ведь', 'даром'], ...]

t = ["– Скажи-ка, дядя, ведь не даром",
    "Я Python выучил с каналом",
    "Балакирев что раздавал?",
    "Ведь были ж заданья боевые,",
    "Да, говорят, еще какие!",
    "Недаром помнит вся Россия",
    "Как мы рубили их тогда!"
    ]
lst = [[word for word in line.split() if len(word) >3 ] for line in t]
print(lst)


# Подвиг 5. Повторите задачу с транспонированием прямоугольной матрицы с помощью list comprehension, изложенной в видео-уроке к этой практике. На вход программе поступает таблица целых чисел, чтение которой уже реализовано в программе:
# s = sys.stdin.readlines()
# lst_in = [list(map(int, x.strip().split())) for x in s]               
# Нужно транспонировать список lst_in (строки заменяются на столбцы) и результат сохранить в списке A. Отобразите полученный список A с помощью следующей конструкции:
# for row in A:
#     print(*row)                 
# Желательно сделать эту задачу не пересматривая видео.
# Sample Input:
# 1 2 3
# 4 5 6
# 7 8 9
# 5 4 3
# Sample Output:
# 1 4 7 5
# 2 5 8 4
# 3 6 9 3

import sys
s = sys.stdin.readlines()
lst_in = [list(map(int, x.strip().split())) for x in s]
A = [[row[i] for row in lst_in] for i in range(len(lst_in[0]))]

for row in A:
    print(*row)