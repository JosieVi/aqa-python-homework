from itertools import count
from unittest import result
import pytest

# TODO: 5.8 Генераторы списков (List comprehension)

# Подвиг 1. На вход программе подаются вещественные числа, записанные через пробел. Необходимо их прочитать и сохранить в списке lst. Затем, используя list comprehension (генератора списков) сформировать новый список lst_abs из модулей чисел списка lst (в итоговом списке должны храниться именно числа, а не строки). Список lst_abs вывести на экран командой:
# print(lst_abs)
# Sample Input:
# 5.56 -8.7 1.0 3.14 77.845
# Sample Output:
# [5.56, 8.7, 1.0, 3.14, 77.845]

lst = list(map(float, input().split()))
list_abs = [abs(i) for i in lst]
print(list_abs)


# Подвиг 2. На вход программе подается семизначное целое положительное число. Необходимо его прочитать и с помощью list comprehension сформировать список lst, содержащий цифры этого числа (в списке должны быть записаны числа, а не строки). Полученный список вывести на экран командой:
# print(lst)
# Sample Input:
# 4567397
# Sample Output:
# [4, 5, 6, 7, 3, 9, 7]

n = input()
lst = [int(i) for i in n]
print(lst)


# Подвиг 3. На вход программе подается строка с названиями городов, записанных через пробел. Необходимо прочитать эту строку и сформировать список с помощью list comprehension, содержащий названия городов длиной более пяти символов. Элементы полученного списка вывести в одну строчку через пробел.
# Sample Input:
# Казань Уфа Москва Челябинск Омск Тур Самара
# Sample Output:
# Казань Москва Челябинск Самара

cities = input().split()
longCities = [city for city in cities if len(city) > 5]
print(*longCities)


# Подвиг 4. На вход программе подается натуральное число n. Необходимо его прочитать и сформировать список с помощью list comprehension, состоящий из делителей числа n (включая и само число n). Элементы полученного списка вывести в одну строчку через пробел.
# Ликбез: делителями числа n называются целые числа, которые делят n нацело (без остатка).
# Sample Input:
# 10
# Sample Output:
# 1 2 5 10

n = int(input())
divisors = [i for i in range(1, n+1) if n % i == 0]
print(*divisors)


# Подвиг 5. На вход программе подается натуральное число N. Необходимо его прочитать и сгенерировать вложенный список с помощью list comprehension, размером N x N, где первая строка содержала бы все нули, вторая - все единицы, третья - все двойки и так до N-й строки. Результат вывести в виде таблицы чисел как показано в примере ниже.
# Sample Input:
# 4
# Sample Output:
# 0 0 0 0
# 1 1 1 1
# 2 2 2 2
# 3 3 3 3

n = int(input())
matrix = [[i for j in range(n)] for i in range(n)]
for row in matrix:
    print(*row)


# Подвиг 6. На вход программе подаются вещественные числа, записанные через пробел. Необходимо их прочитать и сохранить в списке. Затем, с помощью list comprehension сформировать еще один список, состоящий из элементов исходного списка, имеющих четные индексы (то есть, выбрать все элементы с четными индексами). Элементы полученного списка вывести в одну строчку через пробел.
# Sample Input:
# 8.5 11.3 1.0 -4.5 11.34 6.45
# Sample Output:
# 8.5 1.0 11.34

numbers = list(map(float, input().split()))
result = [number for i, number in enumerate(numbers) if i % 2 == 0]
print(*result)


# Подвиг 7. На вход программе подаются два списка целых чисел одинаковой длины, каждый с новой строки. Необходимо их прочитать и каждый сохранить в своем отдельном списке. Затем, с помощью list comprehension сформировать третий список, состоящий из суммы соответствующих пар чисел введенных списков. Элементы полученного списка вывести в одну строчку через пробел.
# Sample Input:
# 1 2 3 4 5
# 6 7 8 9 10
# Sample Output:
# 7 9 11 13 15

list1 = list(map(int, input().split()))
list2 = list(map(int, input().split()))
result = [list1[i] + list2[i] for i in range(len(list1))]
print(*result)


# Подвиг 8. На вход программе подается строка в формате: 
# <город 1> <численность населения 1> <город 2> <численность населения 2> ... <город N> <численность населения N>
# Необходимо прочитать эту строку и с помощью list comprehension сформировать список lst, содержащий вложенные списки из пар:
# [[<город 1>, <численность населения 1>], [<город 2>, <численность населения 2>], ...]
# Численность населения - целое число в тыс. человек. Выведите полученный список командой:
# print(lst)
# Sample Input:
# Москва 15000 Уфа 1200 Самара 1090 Казань 1300
# Sample Output:
# [['Москва', 15000], ['Уфа', 1200], ['Самара', 1090], ['Казань', 1300]]

data = input().split()
lst = [[data[i], int(data[i + 1])] for i in range(0, len(data), 2)]
print(lst)