import pytest

# TODO: 5.1 Оператор цикла while


# Подвиг 2. На вход программы подаются два целых положительных числа n и m, записанных через пробел, причем, n < m. Необходимо прочитать эти числа и вывести в одну строку через пробел квадраты целых чисел в диапазоне [n; m]. Программу реализовать при помощи цикла while.
# Sample Input:
# 2 4
# Sample Output:
# 4 9 16

n, m = map(int, input().split())
# a = []
# while n <= m:
#    a.append(n**2)
#    n += 1
# print(*a)

# 2ой способ:
while n <= m:
   print(n**2, end = ' ')
   n += 1


# Подвиг 3. На вход программы подается вещественное число: стоимость одной книги x рублей. Необходимо прочитать это число и вывести на экран в одну строчку через пробел стоимости 2, 3, ... 10-ти таких книг с точностью до десятых. Программу реализовать при помощи цикла while.
# Sample Input:
# 34.6
# Sample Output:
# 69.2 103.8 138.4 173.0 207.6 242.2 276.8 311.4 346.0 

price, i = float(input()), 2
while i < 11:
    # print(round(price*i, 2), end = ' ')
    print(f'{i*price:.1f}', end = ' ')
    i += 1


 # Подвиг 4. На вход программы подается целое положительное число n. Прочитайте это число, а затем, вычислите и выведите на экран следующую сумму с точностью до тысячных (три знака после запятой): S=1+1/2+1/3+...+1/n. Программу реализовать при помощи цикла while.
#  Sample Input:
# 8
# Sample Output:
# 2.718

n, sum = int(input()), 0
while n:
    sum += 1/n
    n -= 1
print(round(sum,3))


# Подвиг 5. Написать программу, в которой пользователь на каждой итерации цикла (while) должен вводить целое число. Цикл должен продолжаться, пока пользователь не введет число 0. Необходимо вычислить сумму введенных в цикле чисел и вывести результат (сумму) на экран. Программу реализовать при помощи цикла while.
# Sample Input:
# 8
# 11
# 2
# -4
# 0
# Sample Output:
# 17

sum, i = 0, 1
while i != 0:
    i = int(input())
    sum += i
print(sum)


# Подвиг 6. На вход программе подается строка (слаг). Прочитайте эту строку и замените в ней все подряд идущие дефисы (--, ---, ---- и т.д.) на одинарные (-). Результат преобразования строки выведите на экран. Программу реализовать при помощи цикла while.
# Sample Input: osnovnye--metody-----slovarey. 
# Sample Output: osnovnye-metody-slovarey

"""lst = list(input())
i = 0
while i < len(lst) - 1:
    if lst[i]==lst[i+1]=='-':
        lst.pop(i)
    else:
        i += 1
print(''.join(lst))"""

# 2ой вариант:
"""str = input()
while '--' in str:
    str = str.replace('--','-')
print(str)"""

# 3ий вариант:
"""str = input()
while str.count('--'):
    str = str.replace('--','-')
print(str)"""

# 4ый вариант:
str = input()
while '--' in str:
    str = '-'.join(str.split('--'))
print(str)


# Подвиг 7. На вход программе подается натуральное число (то есть, целое положительное) от трехзначного и более. Необходимо прочитать это число и найти произведение всех его цифр. Результат (произведение) вывести на экран. Программу реализовать при помощи цикла while. 
# Sample Input: 821. 
# Sample Output: 16.

"""a = input()
i, p = 0, 1
while i < len(a):
    p *= int(a[i])
    i += 1
print(p)"""

# 2ой вариант:
a = int(input())
p = 1
while a:
    p *= a % 10
    a //= 10
print(p)


# Подвиг 8. Последовательность Фибоначчи образуется так: первые два числа равны 1 и 1, а каждое последующее равно сумме двух предыдущих. В итоге, получаем такую последовательность чисел: 1, 1, 2, 3, 5, 8, 13, ...
# На вход программе подается целое положительное число n (n >= 2). Прочитайте это число и сформируйте последовательность Фибоначчи длиной n. Например, при n = 4 получается последовательность:
# 1 1 2 3
# Результат отобразите в виде строки полученных чисел, записанных через пробел. Программу реализовать при помощи цикла while.
# Sample Input:
# 8
# Sample Output:
# 1 1 2 3 5 8 13 21

a = int(input())
fi = [1,1]
while len(fi) < a:
    fi.append(fi[-1]+fi[-2])
print(*fi)


# Подвиг 9. На вход программе подается целое положительное число n (количество часов). Прочитайте это число и сохраните в переменной n.
# Пусть одноклеточная амеба каждые 3 часа делится на 2 клетки. Необходимо определить, сколько клеток будет через n часов. Считать, что изначально была одна амеба.
# Результат (итоговое число клеток) вывести на экран. Задачу необходимо решить с использованием цикла while.
# Sample Input:
# 11
# Sample Output:
# 8

n = int(input())
a = 1
while n / 3 >= 1:
    a *= 2
    n -= 3
print(a)


# Подвиг 10. Гражданин 1 января открыл счет в банке, вложив 1000 руб. Каждый год размер вклада увеличивается на 5% от имеющейся суммы. Определить сумму вклада через n лет (n - целое положительное число, читаемое из входного потока). Результат (сумму вклада) округлить до сотых и вывести на экран. Программу реализовать при помощи цикла while.
# Sample Input:
# 5
# Sample Output:
# 1276.28

sum, year = 1000, int(input())
while year:
    sum *= 1.05
    year -= 1 
print(round(sum, 2))


# Подвиг 11. На вход программе подаются два натуральных числа n и m, записанных в одну строчку через пробел, причем n < m. Необходимо прочитать эти числа и напечатать все нечетные числа из интервала [n, m]. Задачу следует решить без применения условного оператора. Результат вывести на экран в виде строки чисел, записанных через пробел. Программу реализовать при помощи цикла while.
# Sample Input:
# 2 10
# Sample Output:
# 3 5 7 9

n, m = map(int, input().split())
result = []
# while m > n:
#    result.append(m - 1)
#    m -= 2
# result.reverse()
# print(*result)

# 2ой способ:
while n < m:
    print(n + 1, end = ' ')
    n += 2


# Подвиг 12. Составить программу поиска всех трехзначных чисел, которые при делении на 47 дают в остатке 43 и кратны 3. Вывести найденные числа в одну строчку через пробел в порядке возрастания. Программу реализовать при помощи цикла while.

stop = 999
start = 102
while start < stop:
    if start % 47 == 43:
        print(start,end=' ')
    start += 3   