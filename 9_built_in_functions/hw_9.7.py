# TODO: 9.7 Аргумент key для сортировки по ключу

# Подвиг 1. На вход программе поступает строка с наименованиями рек, записанных через пробел. Необходимо их прочитать и отсортировать названия рек в порядке убывания их длин строк (названий). Результат вывести в одну строчку через пробел.
# Sample Input:
# Лена Енисей Волга Дон
# Sample Output:
# Енисей Волга Лена Дон

rivers = input().split()
rivers_sorted = sorted(rivers, key=len, reverse=True)

print(*rivers_sorted)


# Подвиг 2. На вход программе поступают строки в формате:
# предмет_1=вес_1
# ...
# предмет_N=вес_N
# Веса предметов заданы целыми числами. В программе уже реализовано их считывание в список lst_in:
# lst_in = list(map(str.strip, sys.stdin.readlines()))
       
# Необходимо на основе этих данных сформировать словарь (ключи - названия предметов, значения - вес предметов) и, затем, на основе этого словаря сформировать список предметов по убыванию их веса. (В списке должны находиться только наименования предметов без их весов).
# Отобразить полученный список в виде строки с названиями через пробел.
# Sample Input:
# ножницы=100
# котелок=500
# спички=20
# зажигалка=40
# зеркальце=50
# Sample Output:
# котелок ножницы зеркальце зажигалка спички

import sys
from turtle import right
lst_in = list(map(str.strip, sys.stdin.readlines()))

items_dict = {}
for item in lst_in:
    name, weight = item.split('=')
    items_dict[name] = int(weight)

items_sorted = sorted(items_dict.items(), key=lambda x: x[1], reverse=True)
result = [item[0] for item in items_sorted]

print(*result)


# Подвиг 3. Известно, что порядок нот следующий: до, ре, ми, фа, соль, ля, си. На вход программе поступает строка с набором этих нот, записанных в произвольном порядке через пробел. Необходимо прочитать ноты и сформировать список (с нотами), отсортированными в порядке: до, ре, ми, фа, соль, ля, си. Результирующий список нот вывести в одну строчку через пробел.
# Sample Input:
# до фа соль до ре фа ля си
# Sample Output:
# до до ре фа фа соль ля си

lst_in = list(input().split())

right_order = ['до', 'ре', 'ми', 'фа', 'соль', 'ля', 'си']

def note_key(note):
    return right_order.index(note)

lst_in.sort(key=note_key)

print(*lst_in)


# Подвиг 5. Известно, что звания военнослужащих имеют следующий порядок (по возрастанию):
# рядовой, сержант, старшина, прапорщик, лейтенант, капитан, майор, подполковник, полковник
# На вход программе поступают данные о военнослужащих в формате:
# имя_1=звание_1
# ...
# имя_N=звание_N
#  В программе уже реализовано их считывание в список lst_in:
# lst_in = list(map(str.strip, sys.stdin.readlines()))           
# Необходимо данные списка lst_in представить в виде вложенного списка вида:
# [['имя_1', 'звание_1'], ['имя_2', 'звание_2'], ..., ['имя_N', 'звание_N']]
# Этот список присвоить переменной с именем lst. Затем, отсортировать его по возрастанию званий.
# Выводить на экран ничего не нужно, только сформировать список и указать на него переменную lst.
# Sample Input:
# Атос=лейтенант
# Портос=прапорщик
# д'Артаньян=капитан
# Арамис=лейтенант
# Балакирев=рядовой
# Sample Output:
# True

import sys
lst_in = list(map(str.strip, sys.stdin.readlines()))
ier_d = {"рядовой": 0, "сержант": 1, "старшина": 2, "прапорщик": 3, "лейтенант": 4, "капитан": 5, "майор": 6, "подполковник": 7, "полковник": 8}

lst = [line.split('=') for line in lst_in]
lst.sort(key=lambda x: ier_d[x[1]])

print(lst)

