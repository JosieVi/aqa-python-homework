# TODO: 9.4 Функция filter

# Подвиг 1. На вход программе подается строка с названиями городов, записанных через пробел. Необходимо прочитать эту строку и применить функцию filter, которая бы возвращала только названия длиной более 5 символов. Извлеките первые три полученных значения с помощью функции next и отобразите их на экране в одну строчку через пробел. (Полагается, что минимум три значения имеются).
# Sample Input:
# Тула Ульяновск Хабаровск Владивосток Омск Уфа
# Sample Output:
# Ульяновск Хабаровск Владивосток

cities = input().split()
result = filter(lambda x: len(x) > 5, cities)
print(*(next(result) for _ in range(3)))


# Подвиг 2. На вход программе подается список предметов в виде строк формата:
# название_1=вес_1
# ...
# название_N=вес_N
# В программе уже реализовано их считывание в список lst_in:
# lst_in = list(map(str.strip, sys.stdin.readlines()))           
# С помощью функции map, необходимо сначала преобразовать этот список строк в кортеж, элементами которого также являются кортежи, то есть, представить список в формате:
# (('название_1', 'вес_1'), ..., ('название_N', 'вес_N'))
# А, затем, отфильтровать (исключить) все предметы с весом менее 500, используя функцию filter. Вывести на экран список оставшихся предметов (только их названия) в одну строчку через пробел в порядке их следования во входных данных.
# Sample Input:
# зонт=1000
# палатка=10000
# спички=22
# котелок=543
# Sample Output:
# зонт палатка котелок

from operator import add
import sys
lst_in = list(map(str.strip, sys.stdin.readlines()))

lst_tuples = tuple(map(lambda x: tuple(x.split('=')), lst_in))
lst_filtered = filter(lambda x: int(x[1]) >= 500, lst_tuples)

print(*(item[0] for item in lst_filtered))


# Подвиг 3. На вход программе подаются целые числа, записанные через пробел. Необходимо их прочитать и оставить среди них только двузначные числа. Реализовать программу с использованием функции filter. Результат отобразить на экране в виде последовательности оставшихся чисел в одну строчку через пробел.
# Sample Input:
# 8 11 0 -23 140 1
# Sample Output:
# 11 -23

import sys
lst_in = list(map(int, sys.stdin.readline().split()))

result = filter(lambda x: abs(x) >= 10 and abs(x) <= 99, lst_in)
print(*result)


# Подвиг 4. Саша и Галя коллекционируют монетки. Каждый из них решил записать номиналы монеток из своей коллекции. Получились две последовательности. Эти последовательности чисел (номиналов) поступают на вход программе в виде двух строк из целых чисел, записанных через пробел. Необходимо их прочитать и выделить значения, присутствующие в обоих списках, а затем, оставить среди них только четные. Результат вывести на экран в виде строки полученных чисел в порядке их возрастания через пробел.
# При реализации программы используйте функцию filter и кое-что еще (для упрощения программы), подумайте что.
# Sample Input:
# 1 5 2 7 10 25 50 100
# 5 2 3 7 10 25 55
# Sample Output:
# 2 10

sasha = set(map(int, input().split()))
galya = set(map(int, input().split()))

common = sasha & galya
result = filter(lambda x: x % 2 == 0, common)

print(*sorted(result))


# Подвиг 5. На вход программе подается строка с email-адресами, записанных через пробел. Нужно прочитать эту строку и среди email-адресов оставить только корректно записанные адреса. Полагается, что к таким относятся те, что используют только латинские буквы, цифры и символ подчеркивания. Также в адресе должен быть символ "@", а после него символ точки "." (между ними, конечно же, могут быть и другие символы).
# Результат отобразить в виде строки email-адресов, записанных через пробел в порядке их следования в исходной строке.
# Sample Input:
# abc@it.ru dfd3.ru@mail biba123@list.ru sc_lib@list.ru $fg9@fd.com
# Sample Output:
# abc@it.ru biba123@list.ru sc_lib@list.ru

import string
letters_and_digits=string.ascii_lowercase + string.digits + '_'

address_list = input().split()

def is_valid_email(email):
    if '@' in email and '.' in email.split('@')[-1]:
        local_part, domain_part = email.split('@', 1)
        if all(c in letters_and_digits for c in local_part) and all(c in letters_and_digits + '.' for c in domain_part):
            return True
    return False

result = filter(is_valid_email, address_list)
print(*result)