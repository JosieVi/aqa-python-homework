# TODO: 6.3 Кортежи (tuple) и их методы

# Подвиг 3. Объявите в программе следующий кортеж:
# t = (3.4, -56.7)          
# На вход программе подается последовательность целых чисел, записанных через пробел. Необходимо их прочитать и добавить в конец кортежа t. Добавленные числа в кортеже должны следовать в порядке их считывания. Результат вывести на экран командой:
# print(t)    
# Sample Input:
# 8 11 -5 2
# Sample Output:
# (3.4, -56.7, 8, 11, -5, 2)   

t = (3.4, -56.7)
sample_input = map(int, input().split())

t += tuple(sample_input)

print(t)


# Подвиг 4. На вход программе подается строка с названиями городов, записанных через пробел. Необходимо прочитать эту строку и на ее основе сформировать кортеж из названий городов. Названия в кортеже должны идти в том же порядке, что и в исходной строке. Выполните проверку: если в полученном кортеже нет города "Москва", то следует его добавить в конец кортежа. Выведите на экран названия городов из кортежа (по порядку) в одну строчку через пробел.
# Sample Input:
# Уфа Казань Самара
# Sample Output:
# Уфа Казань Самара Москва

cities = tuple(input().split())

if "Москва" not in cities:
    cities += ("Москва",)

print(*cities)


# Подвиг 5. На вход программе подается строка с названиями городов, записанных через пробел. Необходимо прочитать эту строку и на ее основе сформировать кортеж из названий городов. Затем, выполните проверку: если в полученном кортеже присутствует город "Ульяновск", то этот элемент следует удалить (создав новый кортеж). Выведите на экран названия городов из итогового кортежа (по порядку) в одну строчку через пробел.
# Sample Input:
# Воронеж Самара Тольятти Ульяновск Пермь
# Sample Output:
# Воронеж Самара Тольятти Пермь

cities = tuple(input().split())

if "Ульяновск" in cities:
    cities = tuple(city for city in cities if city != "Ульяновск")

print(*cities)


# Подвиг 6. На вход программе подается строка с именами студентов, записанных через пробел. Необходимо прочитать эту строку и на ее основе сформировать кортеж из имен. Затем, отобразите на экране все имена малыми буквами из этого кортежа (по порядку), которые содержат фрагмент "ва" (без учета регистра). Имена выводятся в одну строчку через пробел в нижнем регистре (малыми буквами).
# Sample Input:
# Петя Варвара Венера Василиса Василий Федор
# Sample Output:
# варвара василиса василий

students = tuple(input().split())
print(*[name.lower() for name in students if "ва" in name.lower()])


# Подвиг 7. На вход программе подаются целые числа, записанные в одну строку через пробел. Необходимо их прочитать и сохранить в кортеже. Затем, создать еще один кортеж с уникальными (не повторяющимися) значениями из первого кортежа. Уникальные числа должны следовать в том же порядке, что и в исходном кортеже. Отобразите найденные уникальные числа в одну строчку через пробел.
# P. S. Подобные задачи решаются, как правило, с помощью множеств, но в качестве практики пока обойдемся без них.
# Sample Input:
# 8 11 -5 -2 8 11 -5
# Sample Output:
# 8 11 -5 -2

numbers = tuple(map(int, input().split()))
unique_numbers = ()

for number in numbers:
    if number not in unique_numbers:
        unique_numbers += (number,)

print(*unique_numbers)


# Подвиг 8. На вход программе подаются целые числа, записанные в одну строку через пробел. Необходимо их прочитать и сохранить в кортеже. Затем, в кортеже найти и вывести в одну строчку через пробел (по порядку) все индексы неуникальных (повторяющихся) значений.
# Sample Input:
# 5 4 -3 2 4 5 10 11
# Sample Output:
# 0 1 4 5

numbers = tuple(map(int, input().split()))
non_unique_indices = []

for index, number in enumerate(numbers):
    if numbers.count(number) > 1:
        non_unique_indices.append(index)

print(*non_unique_indices)


# Подвиг 9. Объявите в программе следующий двумерный кортеж, размером 5 x 5 элементов:
# t = ((1, 0, 0, 0, 0),
#      (0, 1, 0, 0, 0),
#      (0, 0, 1, 0, 0),
#      (0, 0, 0, 1, 0),
#      (0, 0, 0, 0, 1))                 
# На вход программе подается натуральное число N (N < 5). Необходимо на основе кортежа t сформировать новый аналогичный кортеж t2 размером N x N элементов путем отбрасывания последних строк и столбцов. Результат выведите на экран в виде таблицы чисел.
# P.S. Обратите внимание, что в при выводе таблицы в конце строк не должно быть пробелов.
# Sample Input:
# 3
# Sample Output:
# 1 0 0
# 0 1 0
# 0 0 1

t = ((1, 0, 0, 0, 0),
     (0, 1, 0, 0, 0),
     (0, 0, 1, 0, 0),
     (0, 0, 0, 1, 0),
     (0, 0, 0, 0, 1))
n = int(input())

t2 = tuple(row[:n] for row in t[:n])

for row in t2:
    print(*row)


# Подвиг 10. На вход программе подаются строки (пункты меню), каждая с новой строки, в формате:
# название_1 URL-адрес_1
# название_2 URL-адрес_2
# ...
# название_N URL-адрес_N
# В программе уже реализовано чтение этих строк и сохранение их в списке:
# lst_in = list(map(str.strip, sys.stdin.readlines()))                 
# Необходимо преобразовать список lst_in так, чтобы получился кортеж menu следующего вида:
# ((название_1, URL-адрес_1), (название_2, URL-адрес_2), ... (название_N, URL-адрес_N))
# Полученный кортеж вывести на экран командой:
# print(menu)
# Sample Input:
# Главная home
# Python learn-python
# Java learn-java
# PHP learn-php
# Sample Output:
# (('Главная', 'home'), ('Python', 'learn-python'), ('Java', 'learn-java'), ('PHP', 'learn-php'))

import sys
lst_in = list(map(str.strip, sys.stdin.readlines()))

result = tuple(tuple(item.split()) for item in lst_in)

print(result)