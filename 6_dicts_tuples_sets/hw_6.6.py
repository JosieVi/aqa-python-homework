# TODO: 6.6 Генераторы множеств и словарей

# Подвиг 2. На вход программе подается строка со списком оценок, например:
# 2 неудовлетворительно удовлетворительно хорошо отлично
# Первая цифра - это числовое значение первой оценки. Остальные оценки имеют возрастающие числа на 1.
# Необходимо прочитать эту строку и с помощью генератора словарей сформировать словарь d, в котором ключами будут выступать числа, а значениями - слова.
# Например:
# d = {2: 'неудовлетворительно', 3: 'удовлетворительно', 4: 'хорошо', 5: 'отлично'}
# Вывести на экран значение сформированного словаря с ключом 4 (полагается, что такой ключ всегда существует).
# Sample Input:
# 1 ужасно неудовлетворительно удовлетворительно прилично отлично
# Sample Output:
# прилично

rates = input().split()
d = {i + int(rates[0]): rates[i + 1] for i in range(len(rates) - 1)}
print(d[4])


# Подвиг 3. На автомойку в течение квартала заезжали машины. Их гос. номера фиксировались в журнале, следующим образом (пример):
# Е220СК
# А120МВ
# В101АА
# Е220СК
# А120МВ
# В программе уже реализовано чтение этих строк и сохранение в списке:
# lst_in = list(map(str.strip, sys.stdin.readlines()))          
# На основе этого списка через генератор множеств сформировать еще один список уникальных машин. На экран вывести число уникальных машин.
# Sample Input:
# А323ГД
# Д456ВВ
# Б001ББ
# Д456ВВ
# С111СС
# Sample Output:
# 4

import sys
lst_in = list(map(str.strip, sys.stdin.readlines()))
unique_cars = {car for car in lst_in}
print(len(unique_cars))


# Подвиг 4. На вход программе подается строка со словами, записанными через пробел. Необходимо прочитать эту строку и с помощью генератора множеств сформировать множество из уникальных слов без учета регистра и длина которых не менее трех символов. Вывести на экран размер этого множества.
# Sample Input:
# Хижина изба машина и снова хижина машина
# Sample Output:
# 4

sample_input = input().lower().split()
s = {word for word in sample_input if len(word) >= 3}
print(len(s))


# Подвиг 5. На вход программе подается строка со словами, записанными через пробел. Необходимо прочитать эту строку и с помощью генераторов множеств и словарей сформировать словарь в формате:
# {слово_1: количество_1, слово_2: количество_2, ..., слово_N: количество_N}
# То есть, ключами выступают уникальные слова (без учета регистра), а значениями - число их встречаемости в тексте. На экран вывести значение словаря для слова (союза) 'и'. Если такого ключа нет, то вывести 0.
# Sample Input:
# И что сказать и что сказать и нечего и точка
# Sample Output:
# 4

sample_input = input().lower().split()
d = {word: sample_input.count(word) for word in sample_input}
print(d.get('и', 0))


# Подвиг 6. На вход программе подаются строки с информацией по книгам некоторого книжного магазина в формате:
# <автор 1>: <название 1>
# ...
# <автор N>: <название N>
# Авторы с названиями могут повторяться. Также в программе уже реализовано чтение этих строк и сохранение в списке:
# lst_in = list(map(str.strip, sys.stdin.readlines()))           
# Необходимо, используя генераторы, сформировать словарь с именем d вида:
# {'автор 1': {'название 1', 'название 2', ..., 'название M'}, ..., 'автор K': {'название 1', 'название 2', ..., 'название S'}}
# То есть, ключами выступают уникальные авторы, а значениями - множества с уникальными названиями книг соответствующего автора.
# P.S. На экран ничего выводить не нужно, только сформировать словарь обязательно с именем d - он, далее будет проверяться в тестах!
# Sample Input:
# Пушкин: Сказка о рыбаке и рыбке
# Есенин: Письмо к женщине
# Тургенев: Муму
# Пушкин: Евгений Онегин
# Есенин: Русь

lst_in = list(map(str.strip, sys.stdin.readlines()))

unique_authors = {line.split(': ')[0] for line in lst_in}
d = {author: {line.split(': ')[1] for line in lst_in if line.split(': ')[0] == author} for author in unique_authors}




