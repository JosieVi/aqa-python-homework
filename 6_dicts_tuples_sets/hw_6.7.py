# Подвиг 5. Продолжите программу, в которой уже реализовано чтение данных (чисел) из входного потока и сохранение их в виде кортежа t:
# t = tuple(map(int, input().split()))  # кортеж из целых чисел
# s = 0  # начальное значение суммы элементов                
# Используя моржовый оператор и переменную s, необходимо с помощью генератора списка сформировать новый список lst из сумм текущего и всех предыдущих значений кортежа t. Например, для кортежа:
# t = (1, 2, 3, 4, 5, 6)
# должен формироваться список:
# lst = [1, 3, 6, 10, 15, 21]
# Здесь каждый следующий элемент - это сумма текущего и всех предыдущих элементов кортежа t.
# Выведите полученные значения элементов списка lst на экран в одну строчку через пробел.

from unittest import result


t = tuple(map(int, input().split()))  # кортеж из целых чисел
s = 0  # начальное значение суммы элементов

lst = [s := s + x for x in t]
print(*lst)


# Подвиг 6. Используя цикл while и моржовый оператор, выполните считывание целых чисел из входного потока (с клавиатуры) с подсчетом суммы четных чисел. Цикл while должен работать до тех пор, пока не встретится число 0. Полученную сумму выведите на экран.

# P.S. В программе для считывания целых чисел используйте команду int(input()), которая должна быть прописана только один раз.

s = 0
while (n := int(input())) != 0:
    if n % 2 == 0:
        s += n
print(s)


# Подвиг 7. Продолжите программу, в которой уже объявлена функция f и формируется кортеж t:
# def f(x):
#     return abs(x) ** 0.5 + 3.2 + x
# t = tuple(map(float, input().split()))  # кортеж t в программе не менять
               
# Необходимо продолжить эту программу и с помощью генератора списка сформировать двумерный (вложенный) список lst на основе кортежа t, состоящий из следующих значений:
# [[f(t0),f^2(t0),f^3(t0)],[f(t1),f^2(t1),f^3(t1)],...,[f(tn),f^2(tn),f^3(tn)]]
# где t0 - значения элементов кортежа t.
# При описании генератора воспользуйтесь моржовой операцией для однократного вызова функции f(x) для каждого значения кортежа t. То есть, при формировании каждого вложенного списка: [f(ti),f^2(ti),f^3(ti)] функция f(ti) должна вызываться однократно (один раз).
# P.S. На экран ничего выводить не нужно.

def f(x):
    return abs(x) ** 0.5 + 3.2 + x
t = tuple(map(float, input().split()))
lst = [[y := f(ti), y**2, y**3] for ti in t]


# Подвиг 8. Используя цикл while и моржовый оператор, выполните считывание целых чисел из входного потока (с клавиатуры) с подсчетом произведения чисел, кратных трем. Цикл while должен работать до тех пор, пока не встретится отрицательное число или число 0. Полученное произведение выведите на экран.
# P.S. В программе для считывания целых чисел используйте команду int(input()), которая должна быть прописана только один раз.

result = 1
while (n := int(input())) > 0:
    if n % 3 == 0:
        result *= n

print(result if result != 1 else 0)
